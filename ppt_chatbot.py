from ppt_image_handler import PPTImageHandler
import re

class PPTChatbot:
    def __init__(self):
        """Kh·ªüi t·∫°o chatbot"""
        self.image_handler = PPTImageHandler()
        
    def process_message(self, message):
        """
        X·ª≠ l√Ω tin nh·∫Øn t·ª´ ng∆∞·ªùi d√πng
        
        Args:
            message: N·ªôi dung tin nh·∫Øn
            
        Returns:
            str: Ph·∫£n h·ªìi cho ng∆∞·ªùi d√πng
        """
        # Ki·ªÉm tra c√°c pattern ph·ªï bi·∫øn
        
        # Pattern 1: t√¨m N ·∫£nh v·ªÅ X
        match = re.match(r"t√¨m (\d+) ·∫£nh v·ªÅ (.+)", message.lower())
        if match:
            num_images = int(match.group(1))
            query = match.group(2)
            return self._handle_image_search(query, num_images)
            
        # Pattern 2: ch√®n N ·∫£nh X v√†o slide Y
        match = re.match(r"ch√®n (\d+) ·∫£nh (.+) v√†o slide (\d+)", message.lower())
        if match:
            num_images = int(match.group(1))
            query = match.group(2)
            slide_index = int(match.group(3))
            return self._handle_image_insert(query, num_images, slide_index)
            
        # Pattern 3: t√¨m v√† ch√®n N ·∫£nh X (mode)
        match = re.match(r"t√¨m v√† ch√®n (\d+) ·∫£nh (.+) \((\w+)\)", message.lower())
        if match:
            num_images = int(match.group(1))
            query = match.group(2)
            mode = match.group(3)
            return self._handle_image_search_and_insert(query, num_images, mode=mode)
        
        return "T√¥i kh√¥ng hi·ªÉu y√™u c·∫ßu. B·∫°n c√≥ th·ªÉ th·ª≠ c√°c l·ªánh sau:\n" + \
               "1. t√¨m N ·∫£nh v·ªÅ X\n" + \
               "2. ch√®n N ·∫£nh X v√†o slide Y\n" + \
               "3. t√¨m v√† ch√®n N ·∫£nh X (insert/crop)"
    
    def _handle_image_search(self, query, num_images=5):
        """X·ª≠ l√Ω l·ªánh t√¨m ·∫£nh"""
        command = {
            "action": "insert_images",
            "query": query,
            "num_images": num_images,
            "slide_index": 1  # M·∫∑c ƒë·ªãnh slide 1
        }
        
        result = self.image_handler.process_command(command)
        return result["message"]
    
    def _handle_image_insert(self, query, num_images, slide_index):
        """X·ª≠ l√Ω l·ªánh ch√®n ·∫£nh v√†o slide c·ª• th·ªÉ"""
        command = {
            "action": "insert_images",
            "query": query,
            "num_images": num_images,
            "slide_index": slide_index
        }
        
        result = self.image_handler.process_command(command)
        return result["message"]
    
    def _handle_image_search_and_insert(self, query, num_images, mode="insert"):
        """X·ª≠ l√Ω l·ªánh t√¨m v√† ch√®n ·∫£nh v·ªõi mode c·ª• th·ªÉ"""
        command = {
            "action": "insert_images",
            "query": query,
            "num_images": num_images,
            "mode": mode
        }
        
        result = self.image_handler.process_command(command)
        return result["message"]

def main():
    """H√†m ch·∫°y chatbot"""
    chatbot = PPTChatbot()
    
    print("ü§ñ Ch√†o m·ª´ng b·∫°n! T√¥i c√≥ th·ªÉ gi√∫p b·∫°n t√¨m v√† ch√®n ·∫£nh v√†o PowerPoint.")
    print("G√µ 'exit' ƒë·ªÉ tho√°t.")
    
    while True:
        message = input("\nüë§ B·∫°n: ")
        
        if message.lower() == 'exit':
            print("ü§ñ T·∫°m bi·ªát!")
            break
            
        response = chatbot.process_message(message)
        print(f"ü§ñ Bot: {response}")

if __name__ == "__main__":
    main() 